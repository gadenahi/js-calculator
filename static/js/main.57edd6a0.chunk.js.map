{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","display","subdisplay","calStatus","displayClear","bind","handleNumbers","handleOperators","handleDecimals","e","this","target","value","setState","totalVal","match","replace","answer","Math","round","eval","toString","slice","String","length","Number","indexOf","id","onClick","className","React","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.57edd6a0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"0\",\n      subdisplay: \"0\",\n      calStatus: false\n    }\n    this.displayClear = this.displayClear.bind(this)\n    this.handleNumbers = this.handleNumbers.bind(this)\n    this.handleOperators = this.handleOperators.bind(this)\n    this.handleDecimals = this.handleDecimals.bind(this)\n  }\n\n  handleOperators(e) {\n    if (this.state.calStatus) {\n      switch (e.target.value) {\n        case \"/\":\n        case \"x\":\n        case \"-\":\n        case \"+\":\n          this.setState({\n            display: e.target.value,\n            subdisplay: this.state.display + e.target.value,\n            calStatus: false\n          });\n          break;\n        default:\n          var totalVal = this.state.display\n          if (this.state.subdisplay.match(/x/g)) {\n            totalVal = this.state.display.replace(/x/g, \"*\")\n          }\n          let answer = Math.round(1000000000000 * eval(totalVal)) / 1000000000000;\n          this.setState({\n            display: answer.toString(),\n            calStatus: true\n          });\n          break;\n      }\n    } else if (this.state.display.match(/\\d/)) {\n      switch (e.target.value) {\n        case \"/\":\n        case \"x\":\n        case \"-\":\n        case \"+\":\n          this.setState({\n            display: e.target.value,\n            subdisplay: this.state.subdisplay + e.target.value\n          });\n          break;\n        default:\n          totalVal = this.state.subdisplay\n          if (this.state.subdisplay.match(/x/g)) {\n            totalVal = this.state.subdisplay.replace(/x/g, \"*\")\n          }\n          let answer = Math.round(1000000000000 * eval(totalVal)) / 1000000000000;\n          this.setState({\n            display: answer.toString(),\n            calStatus: true\n          });\n          break;\n      }\n    } else if (this.state.display.match(/\\D$/)) {\n      switch (e.target.value) {\n        case \"/\":\n        case \"x\":\n        case \"-\":\n        case \"+\":\n          this.setState({\n            display: e.target.value,\n            subdisplay: this.state.subdisplay.slice(0, -1) + e.target.value\n          });\n          break;\n        default:\n          this.setState({\n            subdisplay: this.state.subdisplay.slice(0, -1) + e.target.value,\n            display: this.state.subdisplay.slice(0, -1),\n            calStatus: true\n          });\n          break;\n      }\n    }\n  }\n\n  handleNumbers(e) {\n    if (this.state.calStatus) {\n      this.setState({\n        display: String(e.target.value),\n        subdisplay: String(e.target.value),\n        calStatus: false\n      })\n    } else {\n      if (this.state.display.length > 19 || this.state.subdisplay.length > 19) {\n        return\n      }\n      if (this.state.display === \"0\") {\n        this.setState({\n          display: String(Number(this.state.display + e.target.value)),\n          subdisplay: String(Number(this.state.subdisplay + e.target.value))\n        })\n      }\n      else {\n        this.setState({\n          display: this.state.display + e.target.value,\n          subdisplay: this.state.subdisplay + e.target.value\n        })\n      }\n    }\n  }\n\n  handleDecimals() {\n    if (this.state.display.indexOf('.') === -1 && this.state.display.match(/\\d/)) {\n      if (this.state.display === \"0\") {\n        this.setState({\n          display: \"0.\",\n          subdisplay: \"0.\"\n        })\n      }\n      else {\n        this.setState({\n          display: String(this.state.display + \".\"),\n          subdisplay: String(this.state.subdisplay + \".\")\n        })\n      }\n    }\n  }\n\n  displayClear() {\n    this.setState({\n      display: \"0\",\n      subdisplay: \"0\",\n      calStatus: false\n    });\n  }\n  render() {\n    return (\n      <div id='cal_main'>\n        <div id=\"subdisplay\">{this.state.subdisplay}</div>\n        <div id=\"display\">{this.state.display}</div>\n        <button id=\"clear\" value=\"AC\" onClick={this.displayClear}>AC</button>\n        <button className=\"symbol\" value=\"/\" onClick={this.handleOperators} id=\"divide\">/</button>\n        <button className=\"symbol\" value=\"x\" onClick={this.handleOperators} id=\"multiply\">x</button>\n        <button className=\"number\" value=\"7\" onClick={this.handleNumbers} id=\"seven\">7</button>\n        <button className=\"number\" value=\"8\" onClick={this.handleNumbers} id=\"eight\">8</button>\n        <button className=\"number\" value=\"9\" onClick={this.handleNumbers} id=\"nine\">9</button>\n        <button className=\"symbol\" value=\"-\" onClick={this.handleOperators} id=\"subtract\">-</button>\n        <button className=\"number\" value=\"4\" onClick={this.handleNumbers} id=\"four\">4</button>\n        <button className=\"number\" value=\"5\" onClick={this.handleNumbers} id=\"five\">5</button>\n        <button className=\"number\" value=\"6\" onClick={this.handleNumbers} id=\"six\">6</button>\n        <button className=\"symbol\" value=\"+\" onClick={this.handleOperators} id=\"add\">+</button>\n        <button className=\"number\" value=\"1\" onClick={this.handleNumbers} id=\"one\">1</button>\n        <button className=\"number\" value=\"2\" onClick={this.handleNumbers} id=\"two\">2</button>\n        <button className=\"number\" value=\"3\" onClick={this.handleNumbers} id=\"three\">3</button>\n        <button className=\"zero\" value=\"0\" onClick={this.handleNumbers} id=\"zero\">0</button>\n        <button className=\"decimal\" value=\".\" onClick={this.handleDecimals} id=\"decimal\">.</button>\n        <button className=\"equals\" value=\"=\" onClick={this.handleOperators} id=\"equals\">=</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}